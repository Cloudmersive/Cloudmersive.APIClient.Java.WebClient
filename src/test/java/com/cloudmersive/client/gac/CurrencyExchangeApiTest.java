/*
 * currencyapi
 * The currency APIs help you retrieve exchange rates and convert prices between currencies easily.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cloudmersive.client.gac;

import com.cloudmersive.client.gac.model.AvailableCurrencyResponse;
import com.cloudmersive.client.gac.model.ConvertedCurrencyResult;
import com.cloudmersive.client.gac.model.ExchangeRateResult;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

/**
 * API tests for CurrencyExchangeApi
 */
@Ignore
public class CurrencyExchangeApiTest {

    private final CurrencyExchangeApi api = new CurrencyExchangeApi();

    
    /**
     * Converts a price from the source currency into the destination currency
     *
     * Automatically converts the price in the source currency into the destination currency using the latest available currency exchange rate data.
     */
    @Test
    public void currencyExchangeConvertCurrencyTest()  {
        String source = null;
        String destination = null;
        Double sourcePrice = null;
        ConvertedCurrencyResult response = api.currencyExchangeConvertCurrency(source, destination, sourcePrice).block();

        // TODO: test validations
    }
    
    /**
     * Get a list of available currencies and corresponding countries
     *
     * Enumerates available currencies and the countries that correspond to these currencies.
     */
    @Test
    public void currencyExchangeGetAvailableCurrenciesTest()  {
        AvailableCurrencyResponse response = api.currencyExchangeGetAvailableCurrencies().block();

        // TODO: test validations
    }
    
    /**
     * Gets the exchange rate from the source currency into the destination currency
     *
     * Automatically gets the exchange rate from the source currency into the destination currency using the latest available currency exchange rate data.
     */
    @Test
    public void currencyExchangeGetExchangeRateTest()  {
        String source = null;
        String destination = null;
        ExchangeRateResult response = api.currencyExchangeGetExchangeRate(source, destination).block();

        // TODO: test validations
    }
    
}
